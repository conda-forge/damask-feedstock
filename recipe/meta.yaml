{% set name = "damask" %}
{% set version = "2.0.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://damask.mpie.de/pub/Download/Current/{{ name }}-{{ version }}.tar.xz
  sha256: c3f487ad1487586fbde696b1402d4dda8c3463ad0710b001ee8e4203eee413c8

build:
  number: 2
  skip: true  # [not linux]
  entry_points:
    - ang_toTable = damask.processing.misc.ang_toTable:main
    - gwyddion_filter = damask.processing.misc.gwyddion_filter:main
    - vtk_fromGwyddion = damask.processing.misc.vtk_fromGwyddion:main
    - yieldSurface = damask.processing.misc.yieldSurface:main
    - yieldSurfaceFast = damask.processing.misc.yieldSurfaceFast:main
    - yieldSurfaceFast = damask.processing.post.yieldSurfaceFast:main
    - addAPS34IDEstrainCoords = damask.processing.post.addAPS34IDEstrainCoords:main
    - addCalculation = damask.processing.post.addCalculation:main
    - addCauchy = damask.processing.post.addCauchy:main
    - addCompatibilityMismatch = damask.processing.post.addCompatibilityMismatch:main
    - addCumulative = damask.processing.post.addCumulative:main
    - addCurl = damask.processing.post.addCurl:main
    - addDerivative = damask.processing.post.addDerivative:main
    - addDeterminant = damask.processing.post.addDeterminant:main
    - addDeviator = damask.processing.post.addDeviator:main
    - addDisplacement = damask.processing.post.addDisplacement:main
    - addDivergence = damask.processing.post.addDivergence:main
    - addEhkl = damask.processing.post.addEhkl:main
    - addEuclideanDistance = damask.processing.post.addEuclideanDistance:main
    - addGaussian = damask.processing.post.addGaussian:main
    - addGradient = damask.processing.post.addGradient:main
    - addIPFcolor = damask.processing.post.addIPFcolor:main
    - addIndexed = damask.processing.post.addIndexed:main
    - addInfo = damask.processing.post.addInfo:main
    - addLinked = damask.processing.post.addLinked:main
    - addMises = damask.processing.post.addMises:main
    - addNorm = damask.processing.post.addNorm:main
    - addOrientations = damask.processing.post.addOrientations:main
    - addPK2 = damask.processing.post.addPK2:main
    - addPole = damask.processing.post.addPole:main
    - addSchmidfactors = damask.processing.post.addSchmidfactors:main
    - addSpectralDecomposition = damask.processing.post.addSpectralDecomposition:main
    - addStrainTensors = damask.processing.post.addStrainTensors:main
    - addTable = damask.processing.post.addTable:main
    - averageDown = damask.processing.post.averageDown:main
    - binXY = damask.processing.post.binXY:main
    - blowUp = damask.processing.post.blowUp:main
    - filterTable = damask.processing.post.filterTable:main
    - groupTable = damask.processing.post.groupTable:main
    - histogram = damask.processing.post.histogram:main
    - imageData = damask.processing.post.imageData:main
    - imageDataDeformed = damask.processing.post.imageDataDeformed:main
    - imageDataRGB = damask.processing.post.imageDataRGB:main
    - marc_to_vtk = damask.processing.post.marc_to_vtk:main
    - mentat_colorMap = damask.processing.post.mentat_colorMap:main
    - perceptualUniformColorMap = damask.processing.post.perceptualUniformColorMap:main
    - permuteData = damask.processing.post.permuteData:main
    - postResults = damask.processing.post.postResults:main
    - reLabel = damask.processing.post.reLabel:main
    - rotateData = damask.processing.post.rotateData:main
    - scaleData = damask.processing.post.scaleData:main
    - shiftData = damask.processing.post.shiftData:main
    - sortTable = damask.processing.post.sortTable:main
    - viewTable = damask.processing.post.viewTable:main
    - vtk2ang = damask.processing.post.vtk2ang:main
    - vtk_addGridData = damask.processing.post.vtk_addGridData:main
    - vtk_addPointCloudData = damask.processing.post.vtk_addPointCloudData:main
    - vtk_addRectilinearGridData = damask.processing.post.vtk_addRectilinearGridData:main
    - vtk_pointCloud = damask.processing.post.vtk_pointCloud:main
    - vtk_rectilinearGrid = damask.processing.post.vtk_rectilinearGrid:main
    - abq_addUserOutput = damask.processing.pre.abq_addUserOutput:main
    - geom_addPrimitive = damask.processing.pre.geom_addPrimitive:main
    - geom_canvas = damask.processing.pre.geom_canvas:main
    - geom_clean = damask.processing.pre.geom_clean:main
    - geom_fromDREAM3D = damask.processing.pre.geom_fromDREAM3D:main
    - geom_fromMinimalSurface = damask.processing.pre.geom_fromMinimalSurface:main
    - geom_fromOsteonGeometry = damask.processing.pre.geom_fromOsteonGeometry:main
    - geom_fromTable = damask.processing.pre.geom_fromTable:main
    - geom_fromVoronoiTessellation = damask.processing.pre.geom_fromVoronoiTessellation:main
    - geom_grainGrowth = damask.processing.pre.geom_grainGrowth:main
    - geom_mirror = damask.processing.pre.geom_mirror:main
    - geom_pack = damask.processing.pre.geom_pack:main
    - geom_renumber = damask.processing.pre.geom_renumber:main
    - geom_rescale = damask.processing.pre.geom_rescale:main
    - geom_rotate = damask.processing.pre.geom_rotate:main
    - geom_toTable = damask.processing.pre.geom_toTable:main
    - geom_translate = damask.processing.pre.geom_translate:main
    - geom_unpack = damask.processing.pre.geom_unpack:main
    - geom_vicinityOffset = damask.processing.pre.geom_vicinityOffset:main
    - gmsh_identifySurfaces = damask.processing.pre.gmsh_identifySurfaces:main
    - hybridIA_linODFsampling = damask.processing.pre.hybridIA_linODFsampling:main
    - marc_addUserOutput = damask.processing.pre.marc_addUserOutput:main
    - mentat_pbcOnBoxMesh = damask.processing.pre.mentat_pbcOnBoxMesh:main
    - mentat_spectralBox = damask.processing.pre.mentat_spectralBox:main
    - patchFromReconstructedBoundaries = damask.processing.pre.patchFromReconstructedBoundaries:main
    - seeds_fromDistribution = damask.processing.pre.seeds_fromDistribution:main
    - seeds_fromGeom = damask.processing.pre.seeds_fromGeom:main
    - seeds_fromPokes = damask.processing.pre.seeds_fromPokes:main
    - seeds_fromRandom = damask.processing.pre.seeds_fromRandom:main

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libselinux') }}  # [linux]
    - {{ cdt('libxdamage') }}  # [linux]
    - {{ cdt('libxxf86vm') }}  # [linux] 
    - make
    - cmake
    - numpy
    - perl
  host:
    - python
    - pip
    - xorg-libxfixes  # [linux]
    - petsc =3.10
    - vtk
    - hdf5 =*=mpi_mpich_*
    - fftw =*=mpi_mpich_*
    - scipy
  run:
    - python
    - petsc =3.10
    - numpy
    - vtk
    - hdf5 =*=mpi_mpich_*
    - fftw =*=mpi_mpich_*
    - scipy
    - mumps-mpi
    - scotch
    - metis
    - scalapack
    - suitesparse
    - parmetis
    - mpich
    - libopenblas
    - hypre
    - ptscotch
    - _openmp_mutex

test:
  commands:
    - DAMASK_spectral --help
  imports:
    - damask

about:
  home: https://damask.mpie.de/
  license: GPL-3.0
  license_family: GPL
  license_file: LICENSE
  summary: 'Duesseldorf Advanced Material Simulation Kit'

  description: |
    At the core of DAMASK is a flexible and hierarchically structured
    model of material point behavior for the solution of elastoplastic
    boundary value problems along with damage and thermal physics. Its 
    main purpose is the simulation of crystal plasticity within a 
    finite-strain continuum mechanical framework.
  doc_url: https://damask.mpie.de/Documentation/WebHome
  dev_url: https://damask.mpie.de/Development/WebHome

extra:
  recipe-maintainers:
    - jan-janssen
    - MarDiehl
